---
- name: "Install bf2 Sandbox Server"
  vars:
    sandbox_server_version: "1.0.1"
    bf2_server_version: "1.5.3"
    bf2_server_os: "linux"

  hosts: "bftwoservers"
  gather_facts: true

  vars_prompt:
    - name: "bf2_user_prompted_pw"
      prompt: "Enter the password for the user bf2 linux user to be created:"

  tasks:
    - name: "Startmessage"
      ansible.builtin.debug:
        msg: "Starting sandbox {{ bf2_server_os }} server installation bf2: v{{ bf2_server_version }}, sandbox: {{ sandbox_server_version }} "
  roles:
    - install_needed_apps
    - role: install_sandbox_server
      bf2_user: "bf2"
      bf2_serverfilename: "battlefield2_linux_server_1.5.3153.0.tar.gz"
      bf2sbx_serverfilename: "sandbox_server_1.0.1.zip"
    - role: install-netsave-sbx-server
      tomcat_linuxuser: "bf2"
      java_version: "20"
      


# more things you can do:
#TODO:
# Role: Ansible preperation:
# Precondition: a Public-Pricate Keypair created to authenticate as Ansible
# Create user Asnible with a default admin user (type user and pw AND sudo pw) (with home dir)
# Add public key to known hosts (loaded from file.)
# Add Ansible as Sudo user with ansible ALL=(ALL:ALL) NOPASSWD:ALL
# Add "PasswordAuthentication no" into the .sshconfig file to only allow auth with keys
# NOTE: When implementing, use a predefined private key, and add it (Encrypted with ansible-vault) into the repo/role
# Add Logic: instead of using the files from local repo in role/installbf2server/files, provide a server (maybe your own)
#            to download it.
#
#   add to users crontab:
#     @reboot sleep20; cd /home/bf2/sandbox/bf2 && /usr/bin/screen -L -A -m -d -S bf2sbx ./start.sh +modPath mods/sandbox
#     */5 * * * * /home/bf2/sandbox/scripts/checkServerRunning.sh
#   
# In Role install bf2 server: add exeption: if unpack cannot be executed, remove the files (call handler)
# Add handler to restart ssh, when created ansible user 